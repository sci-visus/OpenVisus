version: '1.0.{build}'

notifications:
  - provider: Email
    to:
      - scrgiorgio@gmail.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true  
  
environment:
  QT5_DIR: C:/Qt/5.10.1/msvc2017_64
  APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  CMAKE_GENERATOR: Visual Studio 15 2017 Win64
  PYPI_USERNAME: scrgiorgio
  PYPI_PASSWORD:
    secure: 6DHH80JPNRCtIYxWc/h88Q==   
  matrix:
    - PYTHON_EXECUTABLE: C:/Python37-x64/python.exe 
      SKIP_NOTAG: false  
    - PYTHON_EXECUTABLE: C:/Python36-x64/python.exe
      SKIP_NOTAG: true
  
# enable cache for vcpkg
cache: c:\tools\vcpkg\installed\  
  
# 
#if you need to debug uncomment these lines (see https://www.appveyor.com/docs/how-to/rdp-to-build-worker/)
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


# use SKIP_NOTAG to skip building if tag is not present
init:
  - ps: | 
      If (($env:SKIP_NOTAG -eq "true") -and ($env:APPVEYOR_REPO_TAG -ne "true")) {
          Write-Host "Skipping build, not at a tag."
          Exit-AppveyorBuild
      }

install:
  - choco install -y --allow-empty-checksums swig 

build_script:
  - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cmd: cd c:\tools\vcpkg
  - cmd: vcpkg.exe install zlib:x64-windows lz4:x64-windows tinyxml:x64-windows freeimage:x64-windows openssl:x64-windows curl:x64-windows
  - cmd: cd %APPVEYOR_BUILD_FOLDER%  
  - cmd: IF 1==1 %PYTHON_EXECUTABLE% -m pip install --user numpy
  - cmd: mkdir build 
  - cmd: cd build 
  - cmd: cmake -G "%CMAKE_GENERATOR%" -DCMAKE_TOOLCHAIN_FILE="c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET="x64-windows" -DQt5_DIR="%QT5_DIR%/lib/cmake/Qt5" -DPYPI_USERNAME=%PYPI_USERNAME% -DPYPI_PASSWORD=%PYPI_PASSWORD% -DPYTHON_EXECUTABLE=%PYTHON_EXECUTABLE% ../
  - cmd: cmake --build . --target ALL_BUILD --config RelWithDebInfo
  - cmd: cmake --build . --target RUN_TESTS --config RelWithDebInfo
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (cmake --build . --target INSTALL       --config RelWithDebInfo)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (cmake --build . --target deploy        --config RelWithDebInfo)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (cmake --build . --target bdist_wheel   --config RelWithDebInfo)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (cmake --build . --target sdist         --config RelWithDebInfo)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (cmake --build . --target pypi          --config RelWithDebInfo)
   
# test are already in cmake
test: off

artifacts:
    - path: .\build\install\dist\*.zip
      name: UploadToGitReleases
 
deploy:
  - provider: GitHub
    auth_token:
      secure: nwK8bGTRUynj+58b7E8Rgur5/0YvfIivBflFb5AaUrpC5BSTpcLbA4Ac+cCF6L4/
    artifact: UploadToGitReleases
    on:
      appveyor_repo_tag: true 


